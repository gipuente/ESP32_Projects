[1/12] Linking C static library esp-idf\ssd1306\libssd1306.a
[2/12] Linking C static library esp-idf\wifi_provisioning\libwifi_provisioning.a
[3/12] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\equipo3\Desktop\ESP32_Projects\02_Oled\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/equipo3/Desktop/ESP32_Projects/02_Oled/build/bootloader/bootloader.bin"
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/main.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable main.elf
[9/10] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/equipo3/Desktop/ESP32_Projects/02_Oled/build/main.bin
[10/10] cmd.exe /C "cd /D C:\Users\equipo3\Desktop\ESP32_Projects\02_Oled\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/equipo3/Desktop/ESP32_Projects/02_Oled/build/partition_table/partition-table.bin C:/Users/equipo3/Desktop/ESP32_Projects/02_Oled/build/main.bin"
main.bin binary size 0x33c60 bytes. Smallest app partition is 0x100000 bytes. 0xcc3a0 bytes (80%) free.
